/my_project/
│
├── /app/                        # Main application folder
│   ├── /api/                    # API routes for different modules
│   │   ├── /auth/               # Authentication related routes
│   │   │   ├── __init__.py      # Initialization for the auth module
│   │   │   ├── auth.py          # Authentication routes (login, logout, etc.)
│   │   │   ├── schemas.py       # Authentication-related schemas (login, tokens)
│   │   │   └── dependencies.py  # Auth-related dependencies (e.g., OAuth2)
│   │   ├── /users/              # User-related routes
│   │   │   ├── __init__.py      # Initialization for users module
│   │   │   ├── users.py         # User-related routes (CRUD operations, etc.)
│   │   │   ├── schemas.py       # User-related schemas
│   │   │   └── dependencies.py  # User-related dependencies
│   │   └── /tenant/             # Tenant-related routes
│   │       ├── __init__.py      # Initialization for tenant module
│   │       ├── tenant.py        # Tenant-related routes
│   │       ├── schemas.py       # Tenant-related schemas
│   │       └── dependencies.py  # Tenant-related dependencies
│   ├── /models/                 # Database models
│   │   ├── __init__.py          # Initialization for models
│   │   ├── user.py              # User model
│   │   ├── tenant.py            # Tenant model
│   │   ├── role.py              # Role model
│   │   ├── page.py              # Page model
│   │   └── pages_roles.py       # Pages-Roles mapping model
│   ├── /services/               # Business logic layer
│   │   ├── __init__.py          # Initialization for services
│   │   ├── auth_service.py      # Authentication logic (JWT, hashing, etc.)
│   │   ├── user_service.py      # User-related business logic
│   │   ├── tenant_service.py    # Tenant-related business logic
│   │   └── role_service.py      # Role-related business logic
│   ├── /schemas/                # Pydantic models (request and response schemas)
│   │   ├── __init__.py          # Initialization for schemas
│   │   ├── user.py              # User schemas
│   │   ├── tenant.py            # Tenant schemas
│   │   ├── role.py              # Role schemas
│   │   ├── page.py              # Page schemas
│   │   └── token.py             # JWT token schemas
│   ├── /core/                   # Core utilities and configuration
│   │   ├── __init__.py          # Initialization for core
│   │   ├── config.py            # Configuration settings (e.g., database, JWT secrets)
│   │   ├── security.py          # Security utilities (e.g., password hashing, token handling)
│   │   └── logging.py           # Custom logging setup
│   ├── /db/                     # Database initialization and session management
│   │   ├── __init__.py          # Initialization for database
│   │   ├── database.py          # DB session, connection settings
│   │   └── migration.py         # Alembic migration script
│   ├── /tests/                  # Unit and integration tests
│   │   ├── __init__.py          # Initialization for tests
│   │   ├── test_auth.py         # Auth-related tests
│   │   ├── test_user.py         # User-related tests
│   │   ├── test_tenant.py       # Tenant-related tests
│   │   ├── test_role.py         # Role-related tests
│   │   └── test_utils.py        # Utility tests (e.g., DB setup, fixtures)
│   ├── main.py                  # Entry point for FastAPI app (includes app and routes)
│   └── requirements.txt         # List of dependencies
│
└── /migrations/                 # Alembic migrations (auto-generated by Alembic)
    ├── env.py                   # Alembic environment settings
    ├── script.py.mako           # Template for new migrations
    └── versions/                # Folder to store migration versions
