"""added created at,updated at,isactive

Revision ID: 0e67757f7c12
Revises: 7303f506a91a
Create Date: 2025-06-18 19:27:24.301432

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0e67757f7c12'
down_revision: Union[str, Sequence[str], None] = '7303f506a91a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_roles')
    op.add_column('pages', sa.Column('createdAt', sa.DateTime(), nullable=True))
    op.add_column('pages', sa.Column('updatedAt', sa.DateTime(), nullable=True))
    op.add_column('roles', sa.Column('createdAt', sa.DateTime(), nullable=True))
    op.add_column('roles', sa.Column('updatedAt', sa.DateTime(), nullable=True))
    op.add_column('tenants', sa.Column('isActive', sa.Boolean(), nullable=True))
    op.add_column('tenants', sa.Column('createdAt', sa.DateTime(), nullable=True))
    op.add_column('tenants', sa.Column('updatedAt', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('createdAt', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('updatedAt', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'updatedAt')
    op.drop_column('users', 'createdAt')
    op.drop_column('tenants', 'updatedAt')
    op.drop_column('tenants', 'createdAt')
    op.drop_column('tenants', 'isActive')
    op.drop_column('roles', 'updatedAt')
    op.drop_column('roles', 'createdAt')
    op.drop_column('pages', 'updatedAt')
    op.drop_column('pages', 'createdAt')
    op.create_table('users_roles',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('users_roles_role_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('users_roles_user_id_fkey'))
    )
    # ### end Alembic commands ###
